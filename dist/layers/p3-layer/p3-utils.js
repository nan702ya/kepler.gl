"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hexagonToPolygonGeo = hexagonToPolygonGeo;

var _core = require("@deck.gl/core");

var _console = _interopRequireDefault(require("global/console"));

// Copyright (c) 2021 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
function hexagonToPolygonGeo(object, properties, radius, mapState) {
  var viewport = new _core.WebMercatorViewport(mapState);

  if (!Array.isArray(object.position)) {
    return null;
  }

  var screenCenter = viewport.projectFlat(object.position);

  var _viewport$getDistance = viewport.getDistanceScales(object.position),
      unitsPerMeter = _viewport$getDistance.unitsPerMeter;

  if (!Array.isArray(unitsPerMeter)) {
    _console["default"].warn("unitsPerMeter is undefined");

    return null;
  }

  var pixRadius = radius * unitsPerMeter[0];
  var coordinates = [];

  for (var i = 0; i < 6; i++) {
    var vertex = hex_corner(screenCenter, pixRadius, i);
    coordinates.push(viewport.unprojectFlat(vertex));
  }

  coordinates.push(coordinates[0]);
  return {
    geometry: {
      coordinates: coordinates,
      type: 'LineString'
    },
    properties: properties
  };
}

function hex_corner(center, radius, i) {
  var angle_deg = 60 * i + 30;
  var angle_rad = Math.PI / 180 * angle_deg;
  return [center[0] + radius * Math.cos(angle_rad), center[1] + radius * Math.sin(angle_rad)];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sYXllcnMvcDMtbGF5ZXIvcDMtdXRpbHMuanMiXSwibmFtZXMiOlsiaGV4YWdvblRvUG9seWdvbkdlbyIsIm9iamVjdCIsInByb3BlcnRpZXMiLCJyYWRpdXMiLCJtYXBTdGF0ZSIsInZpZXdwb3J0IiwiV2ViTWVyY2F0b3JWaWV3cG9ydCIsIkFycmF5IiwiaXNBcnJheSIsInBvc2l0aW9uIiwic2NyZWVuQ2VudGVyIiwicHJvamVjdEZsYXQiLCJnZXREaXN0YW5jZVNjYWxlcyIsInVuaXRzUGVyTWV0ZXIiLCJDb25zb2xlIiwid2FybiIsInBpeFJhZGl1cyIsImNvb3JkaW5hdGVzIiwiaSIsInZlcnRleCIsImhleF9jb3JuZXIiLCJwdXNoIiwidW5wcm9qZWN0RmxhdCIsImdlb21ldHJ5IiwidHlwZSIsImNlbnRlciIsImFuZ2xlX2RlZyIsImFuZ2xlX3JhZCIsIk1hdGgiLCJQSSIsImNvcyIsInNpbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBb0JBOztBQUNBOztBQXJCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtPLFNBQVNBLG1CQUFULENBQTZCQyxNQUE3QixFQUFxQ0MsVUFBckMsRUFBaURDLE1BQWpELEVBQXlEQyxRQUF6RCxFQUFtRTtBQUN4RSxNQUFNQyxRQUFRLEdBQUcsSUFBSUMseUJBQUosQ0FBd0JGLFFBQXhCLENBQWpCOztBQUNBLE1BQUksQ0FBQ0csS0FBSyxDQUFDQyxPQUFOLENBQWNQLE1BQU0sQ0FBQ1EsUUFBckIsQ0FBTCxFQUFxQztBQUNuQyxXQUFPLElBQVA7QUFDRDs7QUFFRCxNQUFNQyxZQUFZLEdBQUdMLFFBQVEsQ0FBQ00sV0FBVCxDQUFxQlYsTUFBTSxDQUFDUSxRQUE1QixDQUFyQjs7QUFOd0UsOEJBT2hESixRQUFRLENBQUNPLGlCQUFULENBQTJCWCxNQUFNLENBQUNRLFFBQWxDLENBUGdEO0FBQUEsTUFPakVJLGFBUGlFLHlCQU9qRUEsYUFQaUU7O0FBU3hFLE1BQUksQ0FBQ04sS0FBSyxDQUFDQyxPQUFOLENBQWNLLGFBQWQsQ0FBTCxFQUFtQztBQUNqQ0Msd0JBQVFDLElBQVI7O0FBQ0EsV0FBTyxJQUFQO0FBQ0Q7O0FBRUQsTUFBTUMsU0FBUyxHQUFHYixNQUFNLEdBQUdVLGFBQWEsQ0FBQyxDQUFELENBQXhDO0FBRUEsTUFBTUksV0FBVyxHQUFHLEVBQXBCOztBQUVBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxDQUFwQixFQUF1QkEsQ0FBQyxFQUF4QixFQUE0QjtBQUMxQixRQUFNQyxNQUFNLEdBQUdDLFVBQVUsQ0FBQ1YsWUFBRCxFQUFlTSxTQUFmLEVBQTBCRSxDQUExQixDQUF6QjtBQUNBRCxJQUFBQSxXQUFXLENBQUNJLElBQVosQ0FBaUJoQixRQUFRLENBQUNpQixhQUFULENBQXVCSCxNQUF2QixDQUFqQjtBQUNEOztBQUVERixFQUFBQSxXQUFXLENBQUNJLElBQVosQ0FBaUJKLFdBQVcsQ0FBQyxDQUFELENBQTVCO0FBRUEsU0FBTztBQUNMTSxJQUFBQSxRQUFRLEVBQUU7QUFDUk4sTUFBQUEsV0FBVyxFQUFYQSxXQURRO0FBRVJPLE1BQUFBLElBQUksRUFBRTtBQUZFLEtBREw7QUFLTHRCLElBQUFBLFVBQVUsRUFBVkE7QUFMSyxHQUFQO0FBT0Q7O0FBRUQsU0FBU2tCLFVBQVQsQ0FBb0JLLE1BQXBCLEVBQTRCdEIsTUFBNUIsRUFBb0NlLENBQXBDLEVBQXVDO0FBQ3JDLE1BQU1RLFNBQVMsR0FBRyxLQUFLUixDQUFMLEdBQVMsRUFBM0I7QUFDQSxNQUFNUyxTQUFTLEdBQUlDLElBQUksQ0FBQ0MsRUFBTCxHQUFVLEdBQVgsR0FBa0JILFNBQXBDO0FBRUEsU0FBTyxDQUFDRCxNQUFNLENBQUMsQ0FBRCxDQUFOLEdBQVl0QixNQUFNLEdBQUd5QixJQUFJLENBQUNFLEdBQUwsQ0FBU0gsU0FBVCxDQUF0QixFQUEyQ0YsTUFBTSxDQUFDLENBQUQsQ0FBTixHQUFZdEIsTUFBTSxHQUFHeUIsSUFBSSxDQUFDRyxHQUFMLENBQVNKLFNBQVQsQ0FBaEUsQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIxIFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtXZWJNZXJjYXRvclZpZXdwb3J0fSBmcm9tICdAZGVjay5nbC9jb3JlJztcbmltcG9ydCBDb25zb2xlIGZyb20gJ2dsb2JhbC9jb25zb2xlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGhleGFnb25Ub1BvbHlnb25HZW8ob2JqZWN0LCBwcm9wZXJ0aWVzLCByYWRpdXMsIG1hcFN0YXRlKSB7XG4gIGNvbnN0IHZpZXdwb3J0ID0gbmV3IFdlYk1lcmNhdG9yVmlld3BvcnQobWFwU3RhdGUpO1xuICBpZiAoIUFycmF5LmlzQXJyYXkob2JqZWN0LnBvc2l0aW9uKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3Qgc2NyZWVuQ2VudGVyID0gdmlld3BvcnQucHJvamVjdEZsYXQob2JqZWN0LnBvc2l0aW9uKTtcbiAgY29uc3Qge3VuaXRzUGVyTWV0ZXJ9ID0gdmlld3BvcnQuZ2V0RGlzdGFuY2VTY2FsZXMob2JqZWN0LnBvc2l0aW9uKTtcblxuICBpZiAoIUFycmF5LmlzQXJyYXkodW5pdHNQZXJNZXRlcikpIHtcbiAgICBDb25zb2xlLndhcm4oYHVuaXRzUGVyTWV0ZXIgaXMgdW5kZWZpbmVkYCk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBwaXhSYWRpdXMgPSByYWRpdXMgKiB1bml0c1Blck1ldGVyWzBdO1xuXG4gIGNvbnN0IGNvb3JkaW5hdGVzID0gW107XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCA2OyBpKyspIHtcbiAgICBjb25zdCB2ZXJ0ZXggPSBoZXhfY29ybmVyKHNjcmVlbkNlbnRlciwgcGl4UmFkaXVzLCBpKTtcbiAgICBjb29yZGluYXRlcy5wdXNoKHZpZXdwb3J0LnVucHJvamVjdEZsYXQodmVydGV4KSk7XG4gIH1cblxuICBjb29yZGluYXRlcy5wdXNoKGNvb3JkaW5hdGVzWzBdKTtcblxuICByZXR1cm4ge1xuICAgIGdlb21ldHJ5OiB7XG4gICAgICBjb29yZGluYXRlcyxcbiAgICAgIHR5cGU6ICdMaW5lU3RyaW5nJ1xuICAgIH0sXG4gICAgcHJvcGVydGllc1xuICB9O1xufVxuXG5mdW5jdGlvbiBoZXhfY29ybmVyKGNlbnRlciwgcmFkaXVzLCBpKSB7XG4gIGNvbnN0IGFuZ2xlX2RlZyA9IDYwICogaSArIDMwO1xuICBjb25zdCBhbmdsZV9yYWQgPSAoTWF0aC5QSSAvIDE4MCkgKiBhbmdsZV9kZWc7XG5cbiAgcmV0dXJuIFtjZW50ZXJbMF0gKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZV9yYWQpLCBjZW50ZXJbMV0gKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZV9yYWQpXTtcbn1cbiJdfQ==